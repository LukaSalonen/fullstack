{"version":3,"sources":["../../../osa2/puhelinluettelo/src/services/persons.js","../../../osa2/puhelinluettelo/src/components/Contact.js","../../../osa2/puhelinluettelo/src/components/Filter.js","../../../osa2/puhelinluettelo/src/components/PersonForm.js","../../../osa2/puhelinluettelo/src/components/Notification.js","../../../osa2/puhelinluettelo/src/components/App.js","../../../osa2/puhelinluettelo/src/index.js"],"names":["baseUrl","services_persons","newObject","axios","post","get","id","delete","concat","put","DeleteButton","_ref","person","update","notify","react_default","a","createElement","onClick","window","confirm","name","personsService","then","Contact","_ref2","Fragment","number","Contact_DeleteButton","Contacts","_ref3","persons","map","Contact_Contact","key","Filter","currentFilter","handleFilter","value","onChange","FormField","text","stuff","handleChange","PersonForm","addNewContact","text1","handleChange1","text2","handleChange2","onSubmit","PersonForm_FormField","type","Notification","notification","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notificationMessage","setNotificationMessage","updatePersons","response","data","updateNotification","message","kind","setTimeout","useEffect","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","personObject","every","catch","error","replace","old","find","el","components_Contact","filter","toLowerCase","indexOf","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.13d9274f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons/'\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n  }\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}${id}`)\n}\n\nconst updatePerson = (id, newObject) => {\n    return axios.put(`${baseUrl}${id}`, newObject)\n  }\n\nexport default { create, getAll, deletePerson, updatePerson }","import React from 'react'\nimport personsService from '../services/persons'\n\nconst DeleteButton = ({person, update, notify}) => {\n\n    const deleteContact = () => {\n        const confirm = window.confirm(`Delete ${person.name} ?`)\n        \n            if(confirm) {\n                personsService.deletePerson(person.id)\n                .then(a => {\n                    update()\n                    notify(`Deleted ${person.name}`, 'success')\n                })\n            } \n    }\n\n    return(\n        <button onClick={deleteContact} > delete </button>\n    )\n}\n\nconst Contact = ({person, update, notify}) => {\n    return(\n        <>\n            {person.name} {person.number} <DeleteButton person={person} update={update} notify={notify} />\n        <br></br>\n        </>\n    )\n}\n\nconst Contacts = ({persons, update, notify}) => persons.map(a =>\n        <Contact person={a} key={a.id} update={update} notify={notify} />\n    )\n\nexport default Contacts","import React from 'react'\n\nconst Filter = ({currentFilter, handleFilter}) => {\n    \n    return (\n        <>\n            filter shown with <input value={currentFilter} onChange={handleFilter} />\n        </>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst FormField = ({text, stuff, handleChange}) => {\n    return (\n        <div>\n            {text} <input value={stuff} onChange={handleChange} />\n        </div>\n    )\n}\n\nconst PersonForm = ({addNewContact, text1, handleChange1, text2, handleChange2}) => {\n    return(\n        <>\n            <form onSubmit={addNewContact}>\n                <FormField text=\"name: \" stuff={text1} handleChange={handleChange1} />\n                <FormField text=\"number: \" stuff={text2} handleChange={handleChange2} />\n                <button type=\"submit\">add</button>\n            </form>\n        </>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({notification}) => {\n    if (notification.text === '') {\n      return null\n    } else if(notification.type === 'success') {\n        return(\n            <div className=\"success\">\n                {notification.text}\n            </div>\n        )\n\n    } else {\n        return(\n            <div className=\"error\">\n                {notification.text}\n            </div>\n        )\n    }\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Contacts from './Contact'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport personsService from '../services/persons'\nimport Notification from './Notification'\nimport '../App.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ currentFilter, setFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState({text:'', type:''})\n\n  const updatePersons = () => {\n    personsService\n    .getAll()\n    .then(response => {\n      setPersons(response.data)\n    })\n  }\n\nconst updateNotification = (message, kind) => {\n  setNotificationMessage({text:message, type:kind})\n  setTimeout(() => {\n    setNotificationMessage({text:'', type:''})\n  }, 3000)\n  \n}\n\nuseEffect(updatePersons, [])\n\nconst handleNewName = (event) => {\n  setNewName(event.target.value)\n}\nconst handleNewNumber = (event) => {\n  setNewNumber(event.target.value)\n}\n\nconst handleFilter = (event) => {\n  setFilter(event.target.value)\n}\n\nconst addNewContact = (event) => {\n  event.preventDefault()\n  const personObject = {name: newName, number: newNumber}\n\n  if(persons.every(a => a.name !== personObject.name)) {\n    personsService.create(personObject)\n    .then(response => {\n      updatePersons()\n      updateNotification(`Added ${personObject.name}`, 'success')\n    })\n    .catch(error => {\n      updateNotification(error.response.data.error, 'error')\n    })\n  } else {\n    const replace = window.confirm(`${personObject.name} is already added to the phonebook, replace the old number with a new one?`)\n    const old = persons.find(el => el.name === personObject.name)\n    if(replace) {\n      personsService\n      .updatePerson(old.id, personObject)\n      .then(() => {\n        updatePersons()\n        updateNotification(`Updated ${personObject.name}`, 'success')\n      })\n      .catch(error => {\n        updateNotification(`Information of ${personObject.name} has already been removed from the server`, 'error')\n    })\n    }\n  }\n  setNewName('')\n  setNewNumber('')\n}\n\nconst contactsToShow = () => persons.filter(el => el.name.toLowerCase().indexOf(currentFilter.toLowerCase()) !== -1)\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notificationMessage} />\n      <Filter currentFilter={currentFilter} handleFilter={handleFilter} />\n      <h2>add a new </h2>\n      <PersonForm \n        addNewContact={addNewContact}\n        text1={newName} handleChange1={handleNewName}\n        text2={newNumber} handleChange2={handleNewNumber} />\n      <h2>Numbers</h2>\n      <Contacts persons={contactsToShow()} setPersons={setPersons} update={updatePersons} notify={updateNotification} />\n      \n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}